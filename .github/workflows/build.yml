name: Build QEMU WASM for Android

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 90

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v13
      with:
        version: '3.1.45'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential git python3 \
          libglib2.0-dev libpixman-1-dev \
          ninja-build cmake meson \
          autoconf automake libtool \
          pkg-config gettext

    - name: Clone QEMU (minimal)
      run: |
        git clone --depth 1 --branch v5.2.0 \
          https://github.com/qemu/qemu.git qemu-src
        cd qemu-src
        git submodule update --init --depth 1 dtc

    - name: Configure environment
      run: |
        source $EMSDK/emsdk_env.sh
        export CC="emcc -s WASM=1"
        export CXX="em++ -s WASM=1"
        export AR=emar
        export RANLIB=emranlib
        export CFLAGS="-O2 -s ASYNCIFY -s ALLOW_MEMORY_GROWTH=1"
        export LDFLAGS="-s WASM=1 -s FORCE_FILESYSTEM=1"

    - name: Configure minimal QEMU
      run: |
        cd qemu-src
        mkdir build && cd build
        ../configure \
          --target-list= \
          --disable-system \
          --disable-user \
          --disable-tools \
          --disable-docs \
          --disable-guest-agent \
          --disable-werror \
          --extra-cflags="$CFLAGS" \
          --extra-ldflags="$LDFLAGS"

    - name: Build core components
      run: |
        cd qemu-src/build
        make -j2 qemu-common

    - name: Create custom WASM build
      run: |
        cd qemu-src/build
        emcc -o qemu-wasm.js \
          *.o -lglib-2.0 -lpixman-1 \
          $LDFLAGS \
          -s EXPORTED_RUNTIME_METHODS='["FS","callMain"]' \
          -s EXPORTED_FUNCTIONS='["_main"]' \
          -s MODULARIZE=1 \
          -s ALLOW_MEMORY_GROWTH=1

    - name: Package artifacts
      run: |
        mkdir -p artifacts
        cp qemu-src/build/qemu-wasm.js artifacts/
        cp qemu-src/build/qemu-wasm.wasm artifacts/
        echo '<!DOCTYPE html>
        <script src="qemu-wasm.js"></script>
        <script>
        Module = {
          onRuntimeInitialized: () => {
            FS.mkdir("/home");
            FS.mount(IDBFS, {}, "/home");
            console.log("QEMU WASM ready");
          }
        };
        </script>' > artifacts/loader.html

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qemu-wasm-android
        path: artifacts/
